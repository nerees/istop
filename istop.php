<?php/* * 2007-2015 PrestaShop * * NOTICE OF LICENSE * * This source file is subject to the Open Software License (OSL 3.0) * that is bundled with this package in the file LICENSE.txt. * It is also available through the world-wide-web at this URL: * http://opensource.org/licenses/osl-3.0.php * If you did not receive a copy of the license and are unable to * obtain it through the world-wide-web, please send an email * to license@prestashop.com so we can send you a copy immediately. * * DISCLAIMER * * Do not edit or add to this file if you wish to upgrade PrestaShop to newer * versions in the future. If you wish to customize PrestaShop for your * needs please refer to http://www.prestashop.com for more information. * *  @author PrestaShop SA <contact@prestashop.com> *  @copyright  2007-2015 PrestaShop SA *  @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0) *  International Registered Trademark & Property of PrestaShop SA *//** * @author    Nerijus <hi@dev4web.eu> * @copyright  Copyright (c) 2021 - https://dev4web.eu * @license    You can use module,  */class isTop extends Module {	public function __construct() {		$this->name = 'istop';        $this->tab = 'administration';        $this->author = 'Nerijus - hi@dev4web.lt';        $this->version = '2.0.1';        $this->need_instance = 0;        $this->bootstrap = true;         parent::__construct();         $this->displayName = $this->l('(Dev4Web) IsTOP');        $this->description = $this->l('Add fields on product admin form and display flag and new product description tab');        $this->ps_versions_compliancy = array('min' => '1.7.1', 'max' => _PS_VERSION_);    }     public function install() {        if (!parent::install() || !$this->_installSql()                //For first two hooks look at the file src\PrestaShopBundle\Resources\views\Admin\Product\form.html.twig                || ! $this->registerHook('displayAdminProductsExtra')                || ! $this->registerHook('displayAdminProductsMainStepLeftColumnMiddle')                || ! $this->registerHook('actionProductUpdate')                || ! $this->registerHook('actionProductSave')				|| ! $this->registerHook('nnTopProductMiniature')				|| ! $this->registerHook('nnTopProduct')                || ! $this->registerHook('nnProductDescriptionPlus')                || ! $this->registerHook('displayHeader')        ) {            return false;        }         return true;    }     public function uninstall() {        return parent::uninstall() && $this->_unInstallSql();    }     /**     * Install modifications sql module     * @return boolean     */    protected function _installSql() {        $sqlInstall = "ALTER TABLE " . _DB_PREFIX_ . "product "                . "ADD is_top int(1) DEFAULT 0,"                . "ADD has_fast_shipping int(1) DEFAULT 0,"                . "ADD is_eko int(1) DEFAULT 0,"                . "ADD is_good_price int(1) DEFAULT 0,"                . "ADD is_made_in_lt int(1) DEFAULT 0,"                . "ADD is_recommended int(1) DEFAULT 0,"                . "ADD description_plus VARCHAR(255) NULL";        $sqlInstallLang = "ALTER TABLE " . _DB_PREFIX_ . "product_lang "            . "ADD description_plus_lang VARCHAR(255) NULL,"            . "ADD description_plus_lang_wysiwyg TEXT NULL";                 $returnSql = Db::getInstance()->execute($sqlInstall);        $returnSqlLang = Db::getInstance()->execute($sqlInstallLang);        Tools::clearSmartyCache();        Tools::generateIndex();        return $returnSql && $returnSqlLang;    }     /**     * Uninstall modifications sql module     * @return boolean     */    protected function _unInstallSql()    {        $sqlInstall = "ALTER TABLE " . _DB_PREFIX_ . "product "                . "DROP is_top, DROP has_fast_shipping, DROP is_eko, DROP is_good_price, DROP is_made_in_lt, DROP is_recommended, DROP description_plus";        $sqlInstallLang = "ALTER TABLE " . _DB_PREFIX_ . "product_lang "            . "DROP description_plus_lang, DROP description_plus_lang_wysiwyg";                 $returnSql = Db::getInstance()->execute($sqlInstall);        $returnSqlLang = Db::getInstance()->execute($sqlInstallLang);        Tools::clearSmartyCache();        Tools::generateIndex();                return $returnSql && $returnSqlLang;    }     public function hookDisplayAdminProductsExtra($params)    {        return true;    }     /**     * Display of additional information on the product page and product list     * @param type $params     * @return type     */    public function hookDisplayAdminProductsMainStepLeftColumnMiddle($params) {        $product = new Product($params['id_product']);        $languages = Language::getLanguages(false);        $this->context->smarty->assign(array(            'is_top' => $product->is_top,            'has_fast_shipping' => $product->has_fast_shipping,            'is_eko' => $product->is_eko,            'is_good_price' => $product->is_good_price,            'is_made_in_lt' => $product->is_made_in_lt,            'is_recommended' => $product->is_recommended,            'description_plus' => $product->description_plus,            'description_plus_lang' => $product->description_plus_lang,            'description_plus_lang_wysiwyg' => $product->description_plus_lang_wysiwyg,            'languages' => $languages,            'default_language' => $this->context->employee->id_lang,            )           );        return $this->display(__FILE__, 'views/templates/hook/istop.tpl');    }    public function hookActionProductSave($params)    {        return true;    }    public function hookActionProductUpdate($params)    {        return true;    }    public function hooknnTopProduct($params)    {        $product = new Product($params['id_product']);        $this->context->smarty->assign(array(                'is_top' => $product->is_top,                'has_fast_shipping' => $product->has_fast_shipping,                'is_eko' => $product->is_eko,                'is_good_price' => $product->is_good_price,                'is_made_in_lt' => $product->is_made_in_lt,                'is_recommended' => $product->is_recommended,            )        );        return $this->display(__FILE__, 'views/templates/hook/nnProduct.tpl');    }    public function hooknnTopProductMiniature($params)    {        $product = new Product($params['id_product']);        $this->context->smarty->assign(array(                'is_top' => $product->is_top,                'has_fast_shipping' => $product->has_fast_shipping,                'is_eko' => $product->is_eko,                'is_good_price' => $product->is_good_price,                'is_made_in_lt' => $product->is_made_in_lt,                'is_recommended' => $product->is_recommended,            )        );        return $this->display(__FILE__, 'views/templates/hook/nnproductlist.tpl');    }    public function hooknnProductDescriptionPlus($params)    {        $product = new Product($params['id_product']);        $languages = Language::getLanguages(false);        $this->context->smarty->assign(array(                'description_plus' => $product->description_plus,                'description_plus_lang' => $product->description_plus_lang,                'description_plus_lang_wysiwyg' => $product->description_plus_lang_wysiwyg,                'languages' => $languages,            )        );        return $this->display(__FILE__, 'views/templates/hook/nndescriptionplus.tpl');    }    public function hookDisplayHeader()    {        $this->context->controller->addCSS($this->_path.'views/css/istop.css', 'all');    }}